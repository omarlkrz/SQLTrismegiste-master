<Window x:Class="SQLTrismegiste.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SQLTrismegiste"
        mc:Ignorable="d"
        x:Name="_this"
        DataContext="ViewModel.Main"
        Title="{Binding ApplicationTitle}" Height="350" Width="725" WindowStartupLocation="CenterScreen" WindowState="Maximized" Closing="_this_Closing">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <!--<XmlDataProvider x:Key="index" XPath="/Corpus/Folder" Source="CorpusHermeticum/Index.xml" />-->
        <Style x:Key="MarginStyle" TargetType="ItemsControl">
            <Setter Property="Margin" Value="0,0,0,10" />
            <Setter Property="BorderThickness" Value="2" />
        </Style>
        <Style TargetType="TreeView" BasedOn="{StaticResource MarginStyle}" />
        <Style TargetType="{x:Type TreeViewItem}">
            <Setter Property="IsExpanded" Value="{Binding FolderExpanded}">
            </Setter>
        </Style>

    </Window.Resources>
    <DockPanel>
        <ToolBarTray DockPanel.Dock="Top" HorizontalAlignment="Right">
            <ToolBar>
                <!--<Button Content="Analyser" x:Name="btnAnalyze" Click="btnAnalyze_Click"/>-->
                <!--<Button Content="{DynamicResource CheckCorpus}" Click="Button_Click" />-->
                <Button x:Name="btnClearStats" Content="{DynamicResource ClearStats}" Click="btnClearStats_Click" />
                <Button x:Name="btnSaveLastAnalysis" Content="{DynamicResource SaveLastAnalysis}" Click="BtnSaveLastAnalysis_OnClick" />
                <Button x:Name="btnValidateHermeticus" Content="{DynamicResource ValidateHermeticus}" Click="btnValidateHermeticus_Click" />
                <Button x:Name="btnAbout" Content="{DynamicResource About}" Click="btnAbout_Click" />
            </ToolBar>
        </ToolBarTray>
        <StatusBar DockPanel.Dock="Bottom" Height="30" >
            <StackPanel Orientation="Horizontal">
                <Label x:Name="lblStatusConnection" Content="{Binding Path=StatusText, UpdateSourceTrigger=PropertyChanged}"/>
                <Label x:Name="lblStatsCleared" Content="{Binding Path=StatsCleared, UpdateSourceTrigger=PropertyChanged}"/>
            </StackPanel>
        </StatusBar>
        <TreeView x:Name="tvCorpus" BorderThickness="1" Margin="0 0 4 0" DockPanel.Dock="Left" Width="230" 
                   ItemsSource="{Binding Folders}">
            <TreeView.ItemContainerStyle>
                <!--http://stackoverflow.com/questions/1902630/how-to-expand-all-nodes-of-a-wpf-treeview-in-code-behind-->
                <Style TargetType="TreeViewItem">
                    <Setter Property="TreeViewItem.IsExpanded" Value="True"/>
                </Style>
            </TreeView.ItemContainerStyle>
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding Hermetica}">
                    <TextBlock FontWeight="Bold" Text="{Binding Display}" ToolTip="{Binding Tooltip}" />

                    <!-- Team template -->
                    <HierarchicalDataTemplate.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding LocalizedDisplay}" Tag="{Binding Name}" ToolTip="{Binding LocalizedTooltip}" MouseLeftButtonUp="TextBlock_MouseLeftButtonUp" >
                            <!--<TextBlock.Style>
                                <Style>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Status}" Value="{x:Static local:ProcessingStatus.Blank}">
                                            <Setter Property="TextBlock.Foreground" Value="Black"/>
                                        </DataTrigger>
                                        --><!--<DataTrigger Binding="{Binding Status}" Value="{x:Static local:ProcessingStatus.Success}">
                                            <Setter Property="TextBlock.Foreground" Value="Green"/>
                                        </DataTrigger>--><!--
                                        <DataTrigger Binding="{Binding Status}" Value="{x:Static local:ProcessingStatus.Error}">
                                            <Setter Property="TextBlock.Foreground" Value="Red"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>-->
                            </TextBlock>
                        </DataTemplate>
                    </HierarchicalDataTemplate.ItemTemplate>

                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>

        </TreeView>
        <TabControl x:Name="tcDisplay">
            <TabItem>
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <Image Source="images\SQLServer.ico" />
                        <TextBlock Text="{DynamicResource Connection}" Foreground="Blue" />
                    </StackPanel>
                </TabItem.Header>
                <Grid ScrollViewer.CanContentScroll="True" 
                      ScrollViewer.VerticalScrollBarVisibility="Auto">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" MinWidth="276" />
                        <ColumnDefinition Width="Auto" MinWidth="276" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" /> <!--if "auto, no scrollbar -->
                    </Grid.RowDefinitions>
                    <StackPanel>
                        <TextBlock Text="{DynamicResource Server}"
                       VerticalAlignment="Center"
                       Margin="3"
                       Grid.Column="0"
                       Grid.Row="0" />
                        <ComboBox Margin="3" Grid.Column="0" Grid.Row="0"
                          x:Name="SqlServerName"
                          IsEditable="True"
                          ItemsSource="{Binding ElementName=_this, Path=Servers}"
                          Text="{Binding Path=ConnectionStringBuilder.DataSource }" />
                    </StackPanel>
                    <GroupBox Header="{DynamicResource Authentication}"
                      Grid.Column="0" Grid.Row="1">
                        <StackPanel>
                            <RadioButton Content="{DynamicResource WindowsAuthentication}"
                                 Margin="3"
                                 x:Name="SqlAuthTypeWindows"
                                 IsChecked="{Binding Path=ConnectionStringBuilder.IntegratedSecurity, UpdateSourceTrigger=PropertyChanged}">
                            </RadioButton>
                            <RadioButton Content="{DynamicResource SqlAuthentication}"
                                 Margin="3"
                                 x:Name="SqlAuthTypeSql">
                                <RadioButton.Style>
                                    <Style>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=ConnectionStringBuilder.IntegratedSecurity}"
                                                 Value="False">
                                                <Setter Property="RadioButton.IsChecked"
                                                Value="True" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </RadioButton.Style>
                            </RadioButton>
                            <Grid Visibility="{Binding ElementName=SqlAuthTypeSql, Path=IsChecked , Converter={StaticResource BooleanToVisibilityConverter}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="1*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <TextBlock Text="Login: "
                                   Grid.Column="0"
                                   Grid.Row="0"
                                   Margin="3"
                                   VerticalAlignment="Center" />
                                <TextBox Grid.Column="1"
                                 Grid.Row="0"
                                 Margin="3"
                                 Text="{Binding Path=UserID}" />
                                <TextBlock Text="Mot de passe: "
                                   Grid.Column="0"
                                   Grid.Row="1"
                                   Margin="3"
                                   VerticalAlignment="Center" />
                                <TextBox Grid.Column="1"
                                 Grid.Row="1"
                                 Margin="3"
                                 Text="{Binding Path=Password}" />
                                <!--TODO: PasswordBox PasswordChar="*", but no binding !! http://stackoverflow.com/questions/1483892/how-to-bind-to-a-passwordbox-in-mvvm-->
                            </Grid>
                        </StackPanel>
                    </GroupBox>
                    <StackPanel x:Name="panelButtons1" Grid.Row="3" Grid.Column="0" HorizontalAlignment="Right" Orientation="Horizontal">
                        <StackPanel.Resources>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Margin" Value="5,0,0,0"/>
                            </Style>
                        </StackPanel.Resources>
                        <Button x:Name="Connection" Content="{DynamicResource Connect}" Width="100" Click="Connection_Click" />
                        <Button Content="{DynamicResource RunAnalysis}" x:Name="btnAnalyzeAll" Width="100" Click="btnAnalyzeAll_Click" IsEnabled="False"/>
                        <Button x:Name="btnCacheExplorer" Content="{DynamicResource CacheExplorer}" Click="btnCacheExplorer_Click" IsEnabled="False" />
                    </StackPanel>
                    <TextBlock x:Name="tbServerInfos" TextWrapping="Wrap" Text="{Binding Path=ServerInfos}" Grid.Row="4" Grid.Column="0" Margin="10">
                    </TextBlock>
                    <StackPanel Grid.Row="5" Orientation="Horizontal" Margin="0,0,0,0">
                        <Label x:Name="lblDatabases" Content="{DynamicResource Databases}" />
                        <!--<Button x:Name="btnCheckAll" Content="{DynamicResource CheckAll}" Width="100" Click="btnCheckAll_Click" BorderThickness="0" BorderBrush="White" />-->
                    </StackPanel>
                    <DataGrid x:Name="dgDatabases" Grid.Row="6" AutoGenerateColumns="False" ItemsSource="{Binding Path=Databases}" 
                              SelectionMode="Single" SelectionUnit="Cell" EnableRowVirtualization="False" 
                              CanUserAddRows="False"
                              ScrollViewer.CanContentScroll="True" 
                              ScrollViewer.VerticalScrollBarVisibility="Auto" Grid.RowSpan="2">
                        <!-- CanUserAddRows to avoid last empty row-->
                        <DataGrid.Columns>
                            <!--<DataGridCheckBoxColumn Binding="{Binding Checked}" CanUserSort="False" Header="{DynamicResource Analyze}"/>-->
                            <!--Instead of DataGridCheckBoxColumn to allow single click select !-->
                            <DataGridTemplateColumn Header="{DynamicResource Analyze}">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox IsChecked="{Binding Path=Checked, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Binding="{Binding Name}" CanUserSort="False" Header="{DynamicResource Database}"/>
                            <DataGridTextColumn Binding="{Binding CompatibilityLevel}" CanUserSort="False" Header="{DynamicResource Compatibility}">
                            </DataGridTextColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </TabItem>
            <TabItem>
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <Image Source="images\open.ico" />
                        <TextBlock Text="{DynamicResource Results}" Foreground="DarkGreen" />
                    </StackPanel>
                </TabItem.Header>
                <WebBrowser x:Name="htmlBrowser" />
            </TabItem>
            <TabItem x:Name="tabCacheExplorer" Visibility="Hidden">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <Image Source="images\Processor.ico" />
                        <TextBlock Text="Cache Explorer" Foreground="DarkMagenta" />
                    </StackPanel>
                </TabItem.Header>
                <ScrollViewer>
                    <StackPanel Orientation="Vertical" Margin="5,5,5,5">
                        <StackPanel Orientation="Horizontal">
                            <Label Content="{DynamicResource FilterCache}" />
                            <TextBox x:Name="txtFilterCache" Width="100"/>
                            <Button x:Name="btnFilterCache" Content="{DynamicResource Filter}" Margin="5,5,5,5" Click="btnFilterCache_Click" />
                            <!--<RadioButton x:Name="ByExecution" Content="By Execution" Margin="0,5,0,0" />-->
                        </StackPanel>
                        <DataGrid x:Name="dgCacheExplorer" ItemsSource="{Binding Path=PlanCache}" AutoGenerateColumns="False"
                    EnableRowVirtualization="False" CanUserAddRows="False" >
                            <!--<DataGrid.Resources>
                        <Style TargetType="{x:Type DataGridCell}">
                            <Style.Triggers>
                                <Trigger Property="DataGridCell.IsSelected" Value="True">
                                    <Setter Property="Background" Value="#CCDAFF" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.Resources>-->
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="{DynamicResource NbExec}" Width="55" Binding="{Binding execution_count}"/>
                                <DataGridTextColumn Header="{DynamicResource Query}" Width="400" Binding="{Binding short_query}" IsReadOnly="True">
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="DataGridCell">
                                            <Setter Property="ToolTip" Value="{Binding text}" />
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>
                                <DataGridTemplateColumn MinWidth="100" Header="{DynamicResource Query}">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Vertical">
                                                <Button x:Name="btnViewQuery" Content="{DynamicResource Query}" Height="30" VerticalAlignment="Bottom" Click="btnViewQuery_Click" />
                                                <Button x:Name="btnViewPlan" Content="Plan" Height="30" VerticalAlignment="Bottom" Click="btnViewPlan_Click" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTextColumn Header="{DynamicResource CreationDate}" Width="70" Binding="{Binding creation_time}"/>
                                <DataGridTextColumn Header="{DynamicResource CreationDate}" Width="300" Binding="{Binding details}">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style>
                                            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                            <Setter Property="TextBlock.TextAlignment" Value="Left"/>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Header="{DynamicResource Warnings}" Width="30" Binding="{Binding warnings}"/>
                                <DataGridTextColumn Header="{DynamicResource MissingIndexes}" Width="30" Binding="{Binding missing_index}"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>
        </TabControl>
    </DockPanel>
</Window>
